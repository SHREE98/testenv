ToggleSwitchComponent As CanvasComponent:
    Default: =true
    DisplayMode: =gblState.Enabled
    Fill: =RGBA(0, 0, 0, 0)
    Height: =44
    OnReset: |-
        =Set(
            gblToggleValue,
            ToggleSwitchComponent.Default
        )
    ScaleFactor: =1
    StylingProperty: |-
        ={
            TextBox: gblControlStyles.TextBox,
            Toggle: gblControlStyles.Toggle
        }
    TabIndex: =0
    Text: ="Central booking"
    Value: =gblToggleValue
    Width: =324
    X: =0
    Y: =0
    ZIndex: =13

    txtTextInputTS As text:
        Align: =ToggleSwitchComponent.StylingProperty.TextBox.Align
        BorderColor: =ToggleSwitchComponent.StylingProperty.TextBox.BorderColor
        BorderStyle: =ToggleSwitchComponent.StylingProperty.TextBox.BorderStyle
        BorderThickness: =ToggleSwitchComponent.StylingProperty.TextBox.BorderThickness * ToggleSwitchComponent.ScaleFactor
        Clear: =ToggleSwitchComponent.StylingProperty.TextBox.Clear
        Color: =ToggleSwitchComponent.StylingProperty.TextBox.Color
        Default: =""
        DisabledBorderColor: =Self.BorderColor
        DisabledColor: =Self.Color
        DisabledFill: =Self.Fill
        DisplayMode: =DisplayMode.Disabled
        EnableSpellCheck: =ToggleSwitchComponent.StylingProperty.TextBox.EnableSpellCheck
        Fill: =ToggleSwitchComponent.StylingProperty.TextBox.Fill
        FocusedBorderColor: =ToggleSwitchComponent.StylingProperty.TextBox.FocusedBorderColor
        FocusedBorderThickness: =ToggleSwitchComponent.StylingProperty.TextBox.FocusedBorderThickness * ToggleSwitchComponent.ScaleFactor
        Font: =ToggleSwitchComponent.StylingProperty.TextBox.Font
        FontWeight: =ToggleSwitchComponent.StylingProperty.TextBox.FontWeight
        Format: =ToggleSwitchComponent.StylingProperty.TextBox.TextFormat
        Height: =ToggleSwitchComponent.StylingProperty.TextBox.Height * ToggleSwitchComponent.ScaleFactor
        HintText: =ToggleSwitchComponent.Text
        HoverBorderColor: =ToggleSwitchComponent.StylingProperty.TextBox.HoverBorderColor
        HoverColor: =ToggleSwitchComponent.StylingProperty.TextBox.HoverColor
        HoverFill: =ToggleSwitchComponent.StylingProperty.TextBox.HoverFill
        Italic: =ToggleSwitchComponent.StylingProperty.TextBox.Italic
        LineHeight: =ToggleSwitchComponent.StylingProperty.TextBox.LineHeight * ToggleSwitchComponent.ScaleFactor
        Mode: =ToggleSwitchComponent.StylingProperty.TextBox.TextMode
        PaddingBottom: =ToggleSwitchComponent.StylingProperty.TextBox.PaddingBottom * ToggleSwitchComponent.ScaleFactor
        PaddingLeft: =ToggleSwitchComponent.StylingProperty.TextBox.PaddingLeft * ToggleSwitchComponent.ScaleFactor
        PaddingRight: =ToggleSwitchComponent.StylingProperty.TextBox.PaddingRight * ToggleSwitchComponent.ScaleFactor
        PaddingTop: =ToggleSwitchComponent.StylingProperty.TextBox.PaddingTop * ToggleSwitchComponent.ScaleFactor
        PressedBorderColor: =ToggleSwitchComponent.StylingProperty.TextBox.PressedBorderColor
        PressedColor: =ToggleSwitchComponent.StylingProperty.TextBox.PressedColor
        PressedFill: =ToggleSwitchComponent.StylingProperty.TextBox.PressedFill
        RadiusBottomLeft: =ToggleSwitchComponent.StylingProperty.TextBox.RadiusBottomLeft * ToggleSwitchComponent.ScaleFactor
        RadiusBottomRight: =ToggleSwitchComponent.StylingProperty.TextBox.RadiusBottomRight * ToggleSwitchComponent.ScaleFactor
        RadiusTopLeft: =ToggleSwitchComponent.StylingProperty.TextBox.RadiusTopLeft * ToggleSwitchComponent.ScaleFactor
        RadiusTopRight: =ToggleSwitchComponent.StylingProperty.TextBox.RadiusTopRight * ToggleSwitchComponent.ScaleFactor
        Size: =ToggleSwitchComponent.StylingProperty.TextBox.Size * ToggleSwitchComponent.ScaleFactor
        Width: =Parent.Width - (ToggleSwitchComponent.StylingProperty.TextBox.Margin * 2) * ToggleSwitchComponent.ScaleFactor
        X: =ToggleSwitchComponent.StylingProperty.TextBox.Margin * ToggleSwitchComponent.ScaleFactor
        Y: =ToggleSwitchComponent.StylingProperty.TextBox.Margin * ToggleSwitchComponent.ScaleFactor
        ZIndex: =2

    tmrRippleEffectTS As timer:
        Duration: =300 * ToggleSwitchComponent.ScaleFactor
        Height: =0
        OnTimerEnd: |-
            =Set(gblRipple, false);
            Set(gblToggleValue, !gblToggleValue);
            Reset(tmrRippleEffectTS);
            SetFocus(btnHandIconTS);
        OnTimerStart: =Set(gblRipple, true);
        Start: =gblTimerStart
        TabIndex: =-1
        Visible: =false
        Width: =0
        ZIndex: =3

    btnRippleEffectTS As button:
        BorderColor: =Transparent
        BorderThickness: =0
        Color: =Transparent
        DisabledBorderColor: =Self.BorderColor
        DisabledColor: =Self.Color
        DisabledFill: =Self.Fill
        DisplayMode: =DisplayMode.Disabled
        Fill: |-
            =If(
                gblToggleValue,
                ToggleSwitchComponent.StylingProperty.Toggle.Handle.RippleTrueFill,
                ToggleSwitchComponent.StylingProperty.Toggle.Handle.RippleFalseFill
            )
        FocusedBorderThickness: =Self.BorderThickness
        FontWeight: =FontWeight.Normal
        Height: =Self.Width
        HoverBorderColor: =Self.BorderColor
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        PressedBorderColor: =Self.BorderColor
        PressedColor: =Self.Color
        PressedFill: =Self.Fill
        RadiusBottomLeft: =1000
        RadiusBottomRight: =1000
        RadiusTopLeft: =1000
        RadiusTopRight: =1000
        Size: =0
        TabIndex: =-1
        Text: =""
        Visible: =gblRipple
        Width: =tmrRippleEffectTS.Value / 6
        X: =(imgToggleCircleTS.X + imgToggleCircleTS.Width/2) - (Self.Width / 2)
        Y: =(txtToggleBarTS.Y + txtToggleBarTS.Height/2) - (Self.Width / 2)
        ZIndex: =4

    txtToggleBarTS As text:
        BorderColor: =Transparent
        BorderThickness: =0
        Color: =Transparent
        Default: =""
        DisabledBorderColor: =Self.BorderColor
        DisabledColor: =Self.Color
        DisabledFill: =Self.Fill
        DisplayMode: =DisplayMode.Disabled
        Fill: |-
            =If(
                ToggleSwitchComponent.Value,
                If(
                    ToggleSwitchComponent.DisplayMode = "Disabled",
                    ToggleSwitchComponent.StylingProperty.Toggle.Bar.DisableTrueFill,
                    ToggleSwitchComponent.StylingProperty.Toggle.Bar.TrueFill
                ),
                If(
                    ToggleSwitchComponent.DisplayMode = "Disabled",
                    ToggleSwitchComponent.StylingProperty.Toggle.Bar.DisableFalseFill,
                    ToggleSwitchComponent.StylingProperty.Toggle.Bar.FalseFill
                )
            )
        FocusedBorderThickness: =Self.BorderThickness
        Height: =ToggleSwitchComponent.StylingProperty.Toggle.Bar.Height * ToggleSwitchComponent.ScaleFactor
        HoverBorderColor: =Self.BorderColor
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        PressedBorderColor: =Self.BorderColor
        RadiusBottomLeft: =Self.Width
        RadiusBottomRight: =Self.Width
        RadiusTopLeft: =Self.Width
        RadiusTopRight: =Self.Width
        Size: =0
        TabIndex: =-1
        Width: =ToggleSwitchComponent.StylingProperty.Toggle.Bar.Width * ToggleSwitchComponent.ScaleFactor
        X: =(txtTextInputTS.X + txtTextInputTS.Width - Self.Width) - (ToggleSwitchComponent.StylingProperty.Toggle.MarginRight * ToggleSwitchComponent.ScaleFactor)
        Y: =txtTextInputTS.Y +(txtTextInputTS.Height / 2 - Self.Height / 2)
        ZIndex: =5

    imgToggleCircleTS As image:
        BorderColor: =Transparent
        DisabledBorderColor: =Self.BorderColor
        DisabledFill: =Self.Fill
        Fill: =Transparent
        FocusedBorderThickness: =Self.BorderThickness
        Height: =(ToggleSwitchComponent.StylingProperty.Toggle.Handle.Height + (ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Left * 2)) * ToggleSwitchComponent.ScaleFactor
        HoverBorderColor: =Self.BorderColor
        HoverFill: =Self.Fill
        Image: |-
            =If(
                ToggleSwitchComponent.Value,
                If(
                    ToggleSwitchComponent.DisplayMode = "Disabled",
                    ToggleSwitchComponent.StylingProperty.Toggle.Handle.DisableTrueFill,
                    ToggleSwitchComponent.StylingProperty.Toggle.Handle.TrueFill
                ),
                If(
                    ToggleSwitchComponent.DisplayMode = "Disabled",
                    ToggleSwitchComponent.StylingProperty.Toggle.Handle.DisableFalseFill,
                    ToggleSwitchComponent.StylingProperty.Toggle.Handle.FalseFill
                )
            )
        PressedBorderColor: =Self.BorderColor
        PressedFill: =Self.Fill
        Width: =(ToggleSwitchComponent.StylingProperty.Toggle.Handle.Width + (ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Left * 2)) * ToggleSwitchComponent.ScaleFactor
        X: |-
            =If(
                gblToggleValue,
                txtToggleBarTS.X + txtToggleBarTS.Width - ((ToggleSwitchComponent.StylingProperty.Toggle.Handle.Width + ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Left)*ToggleSwitchComponent.ScaleFactor),
                txtToggleBarTS.X - ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Left*ToggleSwitchComponent.ScaleFactor
            )
        Y: =txtToggleBarTS.Y + (txtToggleBarTS.Height / 2 - (ToggleSwitchComponent.StylingProperty.Toggle.Handle.Height * ToggleSwitchComponent.ScaleFactor) / 2) - (ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Top * ToggleSwitchComponent.ScaleFactor)
        ZIndex: =6

    btnHandIconTS As button:
        BorderColor: =Transparent
        BorderThickness: =0
        Color: =Transparent
        DisabledBorderColor: =Self.BorderColor
        DisabledColor: =Self.Color
        DisabledFill: =Self.Fill
        Fill: =Transparent
        FocusedBorderColor: =ToggleSwitchComponent.StylingProperty.Toggle.FocusedBorderColor
        FocusedBorderThickness: =ToggleSwitchComponent.StylingProperty.Toggle.FocusedBorderThickness * ToggleSwitchComponent.ScaleFactor
        FontWeight: =FontWeight.Normal
        Height: =imgToggleCircleTS.Height
        HoverBorderColor: =Self.BorderColor
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        OnSelect: |-
            =Set(gblTimerStart, false);
            Set(gblTimerStart, true);
            //Set(gblToggleValue, !gblToggleValue);
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        PressedBorderColor: =Self.BorderColor
        PressedColor: =Self.Color
        PressedFill: =Self.Fill
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =0
        TabIndex: =ToggleSwitchComponent.TabIndex
        Text: =""
        Visible: =ToggleSwitchComponent.DisplayMode = "Enabled"
        Width: =txtToggleBarTS.Width + (ToggleSwitchComponent.StylingProperty.Toggle.Handle.ShadowPadding.Left) * ToggleSwitchComponent.ScaleFactor
        X: =txtToggleBarTS.X + (txtToggleBarTS.Width / 2 - Self.Width/2)
        Y: =txtToggleBarTS.Y + (txtToggleBarTS.Height / 2 - Self.Height/2)
        ZIndex: =7

    cirHoverEffectTS As circle:
        Fill: =Transparent
        Height: =ToggleSwitchComponent.StylingProperty.Toggle.Handle.HoverCircleHeight * ToggleSwitchComponent.ScaleFactor
        HoverFill: |-
            =If(
                tmrRippleEffectTS.Value > 0,
                Transparent,
                gblToggleValue,
                ToggleSwitchComponent.StylingProperty.Toggle.Handle.RippleTrueFill,
                ToggleSwitchComponent.StylingProperty.Toggle.Handle.RippleFalseFill
            )
        OnSelect: |-
            =Reset(tmrRippleEffectTS);
            Set(gblTimerStart, false);
            Set(gblTimerStart, true);
        PressedFill: =If(gblToggleValue, RGBA(25, 68, 106, 0.12), RGBA(0, 0, 0, 0.04))
        Visible: =ToggleSwitchComponent.DisplayMode = "Enabled"
        Width: =ToggleSwitchComponent.StylingProperty.Toggle.Handle.HoverCircleWidth * ToggleSwitchComponent.ScaleFactor
        X: =(imgToggleCircleTS.X + imgToggleCircleTS.Width / 2 - Self.Width / 2)
        Y: =(txtToggleBarTS.Y + txtToggleBarTS.Height / 2 - Self.Height / 2)
        ZIndex: =8

